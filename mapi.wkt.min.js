/*!
 * Mapi.wkt - An easy to use wrapper for Google Maps API
 * Version: 1.0.0
 * Author: Thiago Ribeiro - thiagofribeiro@gmail.com
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("underscore"),require("jquery")):"function"==typeof define&&define.amd?define(["underscore","jquery"],e):"object"==typeof exports?exports.MapiWkt=e(require("underscore"),require("jquery")):t.MapiWkt=e(t._,t.jQuery)}(this,function(t,e){return function(t){function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e,o){"use strict";function n(t,e){var o={};for(var n in t)e.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(t,n)&&(o[n]=t[n]);return o}var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},s=(o(4),o(3));Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),window.Wkt=o(1),o(2);var i={wkt:Wkt,addObjectFromWKT:function(t){var e=t.groupId,o=void 0===e?"wkt":e,i=t.id,p=void 0===i?s.uniqueId("wkt"):i,a=t.wkt,g=n(t,["groupId","id","wkt"]),l=this;a="object"===("undefined"==typeof a?"undefined":r(a))?JSON.stringify(a):a.replace("\n","").replace("\r","").replace("	","");var c=new Wkt.Wkt;c.read(a);var u=c.toObject(g),h=function(t,e){t.setMap(l.map),e?l.addObject({groupId:o,id:p+"_"+e,object:t}):l.addObject({groupId:o,id:p,object:t}),g.onClick&&google.maps.event.addListener(t,"click",g.onClick),g.tooltip&&this.addTooltip(t,g.tooltip,g.tooltipCss)};return Array.isArray(u)?s(u).each(h):h(u),u},getWKTFromObject:function(t){var e=t.groupId,o=t.id,n=new Wkt.Wkt;if(console.log(n),!o){var r={};return s.each(this.objects[e],function(t,e){n.fromObject(t),r[e]=n.write()}),r}return this.objects[e][o]?(n.fromObject(this.objects[e][o]),n.write()):void 0}};window.Wkt=null,t.exports=i},function(t,e,o){var n;/** @license
	 *
	 *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)
	 *  Michigan Tech Research Institute (MTRI)
	 *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105
	 *
	 *  This program is free software: you can redistribute it and/or modify
	 *  it under the terms of the GNU General Public License as published by
	 *  the Free Software Foundation, either version 3 of the License, or
	 *  (at your option) any later version.
	 *
	 *  This program is distributed in the hope that it will be useful,
	 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
	 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 *  GNU General Public License for more details.
	 *
	 *  You should have received a copy of the GNU General Public License
	 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
!function(r,s){n=function(){return s()}.call(e,o,e,t),!(void 0!==n&&(t.exports=n))}(this,function(){var t,e,o,n;return o=this,n=function(t){return t instanceof n?t:this instanceof n?void(this._wrapped=t):new n(t)},t=function(t,e){return t.substring(0,e.length)===e},e=function(t,e){return t.substring(t.length-e.length)===e},n.delimiter=" ",n.isArray=function(t){return!(!t||t.constructor!==Array)},n.trim=function(o,n){for(n=n||" ";t(o,n);)o=o.substring(1);for(;e(o,n);)o=o.substring(0,o.length-1);return o},n.Wkt=function(t){this.delimiter=n.delimiter||" ",this.wrapVertices=!0,this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+(\.*\d+)?/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,coord:/-*\d+\.*\d+ -*\d+\.*\d+/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/,ogcTypes:/^(multi)?(point|line|polygon|box)?(string)?$/i,crudeJson:/^{.*"(type|coordinates|geometries|features)":.*}$/},this.components=void 0,t&&"string"==typeof t?this.read(t):t&&void 0!==typeof t&&this.fromObject(t)},n.Wkt.prototype.isCollection=function(){switch(this.type.slice(0,5)){case"multi":return!0;case"polyg":return!0;default:return!1}},n.Wkt.prototype.sameCoords=function(t,e){return t.x===e.x&&t.y===e.y},n.Wkt.prototype.fromObject=function(t){var e;return e=t.hasOwnProperty("type")&&t.hasOwnProperty("coordinates")?this.fromJson(t):this.deconstruct.call(this,t),this.components=e.components,this.isRectangle=e.isRectangle||!1,this.type=e.type,this},n.Wkt.prototype.toObject=function(t){var e=this.construct[this.type].call(this,t);return"object"!=typeof e||n.isArray(e)||(e.properties=this.properties),e},n.Wkt.prototype.toString=function(t){return this.write()},n.Wkt.prototype.fromJson=function(t){var e,o,r,s,i,p;if(this.type=t.type.toLowerCase(),this.components=[],t.hasOwnProperty("geometry"))return this.fromJson(t.geometry),this.properties=t.properties,this;if(s=t.coordinates,n.isArray(s[0])){for(e in s)if(s.hasOwnProperty(e))if(n.isArray(s[e][0])){p=[];for(o in s[e])if(s[e].hasOwnProperty(o))if(n.isArray(s[e][o][0])){i=[];for(r in s[e][o])s[e][o].hasOwnProperty(r)&&i.push({x:s[e][o][r][0],y:s[e][o][r][1]});p.push(i)}else p.push({x:s[e][o][0],y:s[e][o][1]});this.components.push(p)}else"multipoint"===this.type?this.components.push([{x:s[e][0],y:s[e][1]}]):this.components.push({x:s[e][0],y:s[e][1]})}else this.components.push({x:s[0],y:s[1]});return this},n.Wkt.prototype.toJson=function(){var t,e,o,r,s,i,p;if(t=this.components,e={coordinates:[],type:function(){var t,e,o;e=this.regExes.ogcTypes.exec(this.type).slice(1),o=[];for(t in e)e.hasOwnProperty(t)&&void 0!==e[t]&&o.push(e[t].toLowerCase().slice(0,1).toUpperCase()+e[t].toLowerCase().slice(1));return o}.call(this).join("")},"box"===this.type.toLowerCase()){e.type="Polygon",e.bbox=[];for(o in t)t.hasOwnProperty(o)&&(e.bbox=e.bbox.concat([t[o].x,t[o].y]));return e.coordinates=[[[t[0].x,t[0].y],[t[0].x,t[1].y],[t[1].x,t[1].y],[t[1].x,t[0].y],[t[0].x,t[0].y]]],e}for(o in t)if(t.hasOwnProperty(o))if(n.isArray(t[o])){p=[];for(r in t[o])if(t[o].hasOwnProperty(r))if(n.isArray(t[o][r])){i=[];for(s in t[o][r])t[o][r].hasOwnProperty(s)&&i.push([t[o][r][s].x,t[o][r][s].y]);p.push(i)}else t[o].length>1?p.push([t[o][r].x,t[o][r].y]):p=p.concat([t[o][r].x,t[o][r].y]);e.coordinates.push(p)}else t.length>1?e.coordinates.push([t[o].x,t[o].y]):e.coordinates=e.coordinates.concat([t[o].x,t[o].y]);return e},n.Wkt.prototype.merge=function(t){var e=this.type.slice(0,5);if(this.type!==t.type&&this.type.slice(5,this.type.length)!==t.type)throw TypeError("The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other");switch(e){case"point":this.components=[this.components.concat(t.components)];break;case"multi":this.components=this.components.concat("multi"===t.type.slice(0,5)?t.components:[t.components]);break;default:this.components=[this.components,t.components]}return"multi"!==e&&(this.type="multi"+this.type),this},n.Wkt.prototype.read=function(t){var e;if(e=this.regExes.typeStr.exec(t))this.type=e[1].toLowerCase(),this.base=e[2],this.ingest[this.type]&&(this.components=this.ingest[this.type].apply(this,[this.base]));else{if(!this.regExes.crudeJson.test(t))throw console.log("Invalid WKT string provided to read()"),{name:"WKTError",message:"Invalid WKT string provided to read()"};if("object"!=typeof JSON||"function"!=typeof JSON.parse)throw console.log("JSON.parse() is not available; cannot parse GeoJSON strings"),{name:"JSONError",message:"JSON.parse() is not available; cannot parse GeoJSON strings"};this.fromJson(JSON.parse(t))}return this},n.Wkt.prototype.write=function(t){var e,o,n;for(t=t||this.components,o=[],o.push(this.type.toUpperCase()+"("),e=0;e<t.length;e+=1){if(this.isCollection()&&e>0&&o.push(","),!this.extract[this.type])return null;n=this.extract[this.type].apply(this,[t[e]]),this.isCollection()&&"multipoint"!==this.type?o.push("("+n+")"):(o.push(n),e!==t.length-1&&"multipoint"!==this.type&&o.push(","))}return o.push(")"),o.join("")},n.Wkt.prototype.extract={point:function(t){return String(t.x)+this.delimiter+String(t.y)},multipoint:function(t){var e,o,n=[];for(e=0;e<t.length;e+=1)o=this.extract.point.apply(this,[t[e]]),this.wrapVertices&&(o="("+o+")"),n.push(o);return n.join(",")},linestring:function(t){return this.extract.point.apply(this,[t])},multilinestring:function(t){var e,o=[];if(t.length)for(e=0;e<t.length;e+=1)o.push(this.extract.linestring.apply(this,[t[e]]));else o.push(this.extract.point.apply(this,[t]));return o.join(",")},polygon:function(t){return this.extract.multilinestring.apply(this,[t])},multipolygon:function(t){var e,o=[];for(e=0;e<t.length;e+=1)o.push("("+this.extract.polygon.apply(this,[t[e]])+")");return o.join(",")},box:function(t){return this.extract.linestring.apply(this,[t])},geometrycollection:function(t){console.log("The geometrycollection WKT type is not yet supported.")}},n.Wkt.prototype.ingest={point:function(t){var e=n.trim(t).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(e[0])[0]),y:parseFloat(this.regExes.numeric.exec(e[1])[0])}]},multipoint:function(t){var e,o,r;for(o=[],r=n.trim(t).split(this.regExes.comma),e=0;e<r.length;e+=1)o.push(this.ingest.point.apply(this,[r[e]]));return o},linestring:function(t){var e,o,n;for(o=this.ingest.multipoint.apply(this,[t]),n=[],e=0;e<o.length;e+=1)n=n.concat(o[e]);return n},multilinestring:function(t){var e,o,r,s;for(o=[],s=n.trim(t).split(this.regExes.doubleParenComma),1===s.length&&(s=n.trim(t).split(this.regExes.parenComma)),e=0;e<s.length;e+=1)r=s[e].replace(this.regExes.trimParens,"$1"),o.push(this.ingest.linestring.apply(this,[r]));return o},polygon:function(t){var e,o,r,s,i,p;for(p=n.trim(t).split(this.regExes.parenComma),r=[],e=0;e<p.length;e+=1){for(i=p[e].replace(this.regExes.trimParens,"$1").split(this.regExes.comma),s=[],o=0;o<i.length;o+=1){var a=i[o].split(this.regExes.spaces);if(a.length>2&&(a=a.filter(function(t){return""!=t})),2===a.length){var g=a[0],l=a[1];s.push({x:parseFloat(g),y:parseFloat(l)})}}r.push(s)}return r},box:function(t){var e,o,n;for(o=this.ingest.multipoint.apply(this,[t]),n=[],e=0;e<o.length;e+=1)n=n.concat(o[e]);return n},multipolygon:function(t){var e,o,r,s;for(o=[],s=n.trim(t).split(this.regExes.doubleParenComma),e=0;e<s.length;e+=1)r=s[e].replace(this.regExes.trimParens,"$1"),o.push(this.ingest.polygon.apply(this,[r]));return o},geometrycollection:function(t){console.log("The geometrycollection WKT type is not yet supported.")}},n})},function(t,e,o){/** @license
	 *
	 *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)
	 *  Michigan Tech Research Institute (MTRI)
	 *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105
	 *
	 *  This program is free software: you can redistribute it and/or modify
	 *  it under the terms of the GNU General Public License as published by
	 *  the Free Software Foundation, either version 3 of the License, or
	 *  (at your option) any later version.
	 *
	 *  This program is distributed in the hope that it will be useful,
	 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
	 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 *  GNU General Public License for more details.
	 *
	 *  You should have received a copy of the GNU General Public License
	 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 *
	 */
!function(t){t.Wkt.prototype.isRectangle=!1,t.Wkt.prototype.construct={point:function(t,e){var o=e||this.components;return t=t||{},t.position=new google.maps.LatLng(o[0].y,o[0].x),new google.maps.Marker(t)},multipoint:function(t){var e,o,n;for(o=this.components,t=t||{},n=[],e=0;e<o.length;e+=1)n.push(this.construct.point(t,o[e]));return n},linestring:function(t,e){var o,n;for(n=e||this.components,t=t||{editable:!1},t.path=[],o=0;o<n.length;o+=1)t.path.push(new google.maps.LatLng(n[o].y,n[o].x));return new google.maps.Polyline(t)},multilinestring:function(t){var e,o,n;for(o=this.components,t=t||{editable:!1},t.path=[],n=[],e=0;e<o.length;e+=1)n.push(this.construct.linestring(t,o[e]));return n},box:function(t,e){var o=e||this.components;return t=t||{},t.bounds=new google.maps.LatLngBounds(new google.maps.LatLng(o[0].y,o[0].x),new google.maps.LatLng(o[1].y,o[1].x)),new google.maps.Rectangle(t)},polygon:function(t,e){var o,n,r,s,i,p=function(t){var e=0,o=null,n=0;for(n=0;n<t.length;n++)o=(n+1)%t.length,e+=t[n].x*t[o].x,e-=t[o].y*t[n].y;return e>0};for(r=e||this.components,t=t||{editable:!1},t.paths=[],s=[],o=0;o<r.length;o+=1){for(i=[],n=0;n<r[o].length-1;n+=1)i.push(new google.maps.LatLng(r[o][n].y,r[o][n].x));0!==o&&p(r[o])&&"polygon"==this.type&&i.reverse(),s.push(i)}return t.paths=t.paths.concat(s),this.isRectangle?function(){var t,e;t=new google.maps.LatLngBounds;for(e in s[0])s[0].hasOwnProperty(e)&&t.extend(s[0][e]);return new google.maps.Rectangle({bounds:t})}():new google.maps.Polygon(t)},multipolygon:function(t){var e,o,n;for(o=this.components,t=t||{editable:!1},t.path=[],n=[],e=0;e<o.length;e+=1)n.push(this.construct.polygon(t,o[e]));return n}},t.Wkt.prototype.deconstruct=function(e,o){var n,r,s,o,i,p,a,g,l,c,u;if(google.maps.geometry&&(a=google.maps.geometry.spherical.computeSignedArea),e.constructor===google.maps.LatLng)return l={type:"point",components:[{x:e.lng(),y:e.lat()}]};if(e.constructor===google.maps.Point)return l={type:"point",components:[{x:e.x,y:e.y}]};if(e.constructor===google.maps.Marker)return l={type:"point",components:[{x:e.getPosition().lng(),y:e.getPosition().lat()}]};if(e.constructor===google.maps.Polyline){for(i=[],r=0;r<e.getPath().length;r+=1)g=e.getPath().getAt(r),i.push({x:g.lng(),y:g.lat()});return l={type:"linestring",components:i}}if(e.constructor===google.maps.Polygon){for(p=[],void 0===o&&(o=function(){var t,n;return n=e.getPaths().length,1>=n?!1:2===n?!(a(e.getPaths().getAt(0))*a(e.getPaths().getAt(1))<0):(t=e.getPaths().getArray().map(function(t){return a(t)/Math.abs(a(t))}),t.indexOf(t[0])!==t.lastIndexOf(t[0])?(o=!0,!0):!1)}()),r=0;r<e.getPaths().length;r+=1){for(g=e.getPaths().getAt(r),i=[],s=0;s<e.getPaths().getAt(r).length;s+=1)i.push({x:g.getAt(s).lng(),y:g.getAt(s).lat()});g.getAt(g.length-1).equals(g.getAt(0))||(r%2!==0?i.unshift({x:g.getAt(g.length-1).lng(),y:g.getAt(g.length-1).lat()}):i.push({x:g.getAt(0).lng(),y:g.getAt(0).lat()})),e.getPaths().length>1&&r>0&&(a(e.getPaths().getAt(r))>0&&a(e.getPaths().getAt(r-1))>0||a(e.getPaths().getAt(r))<0&&a(e.getPaths().getAt(r-1))<0&&!o)&&(i=[i]),r%2!==0&&i.reverse(),p.push(i)}return l={type:o?"multipolygon":"polygon",components:p}}if(e.constructor===google.maps.Circle){var h=e.getCenter(),y=e.getRadius();i=[];var f=Math.PI/180,m=180/Math.PI;y/=1609;for(var x=3963,d=32,v=y/x*m,b=v/Math.cos(h.lat()*f),w=0;d>=w;w++){var P=Math.PI*(w/(d/2));u=h.lng()+b*Math.cos(P),c=h.lat()+v*Math.sin(P),i.push({x:u,y:c})}return l={type:"polygon",components:[i]}}if(e.constructor===google.maps.LatLngBounds)return g=e,i=[],i.push({x:g.getSouthWest().lng(),y:g.getNorthEast().lat()}),i.push({x:g.getNorthEast().lng(),y:g.getNorthEast().lat()}),i.push({x:g.getNorthEast().lng(),y:g.getSouthWest().lat()}),i.push({x:g.getSouthWest().lng(),y:g.getSouthWest().lat()}),i.push({x:g.getSouthWest().lng(),y:g.getNorthEast().lat()}),l={type:"polygon",isRectangle:!0,components:[i]};if(e.constructor===google.maps.Rectangle)return g=e.getBounds(),i=[],i.push({x:g.getSouthWest().lng(),y:g.getNorthEast().lat()}),i.push({x:g.getNorthEast().lng(),y:g.getNorthEast().lat()}),i.push({x:g.getNorthEast().lng(),y:g.getSouthWest().lat()}),i.push({x:g.getSouthWest().lng(),y:g.getSouthWest().lat()}),i.push({x:g.getSouthWest().lng(),y:g.getNorthEast().lat()}),l={type:"polygon",isRectangle:!0,components:[i]};if(e.constructor===google.maps.Data.Feature)return this.deconstruct.call(this,e.getGeometry());if(e.constructor===google.maps.Data.Point)return l={type:"point",components:[{x:e.get().lng(),y:e.get().lat()}]};if(e.constructor===google.maps.Data.LineString){for(i=[],r=0;r<e.getLength();r+=1)vertex=e.getAt(r),i.push({x:vertex.lng(),y:vertex.lat()});return l={type:"linestring",components:i}}if(e.constructor===google.maps.Data.Polygon){var p=[];for(r=0;r<e.getLength();r+=1){ring=e.getAt(r);var i=[];for(s=0;s<ring.getLength();s+=1)vertex=ring.getAt(s),i.push({x:vertex.lng(),y:vertex.lat()});i.push({x:ring.getAt(0).lng(),y:ring.getAt(0).lat()}),p.push(i)}return l={type:"polygon",components:p}}if(e.constructor===google.maps.Data.MultiPoint){for(i=[],r=0;r<e.getLength();r+=1)vertex=e.getAt(r),i.push([{x:vertex.lng(),y:vertex.lat()}]);return l={type:"multipoint",components:i}}if(e.constructor===google.maps.Data.MultiLineString){for(linestrings=[],r=0;r<e.getLength();r+=1){i=[];var A=e.getAt(r);for(s=0;s<A.getLength();s+=1)vertex=A.getAt(s),i.push({x:vertex.lng(),y:vertex.lat()});linestrings.push(i)}return l={type:"multilinestring",components:linestrings}}if(e.constructor===google.maps.Data.MultiPolygon){var W=[];for(k=0;k<e.getLength();k+=1){var O=e.getAt(k),p=[];for(r=0;r<O.getLength();r+=1){ring=O.getAt(r);var i=[];for(s=0;s<ring.getLength();s+=1)vertex=ring.getAt(s),i.push({x:vertex.lng(),y:vertex.lat()});i.push({x:ring.getAt(0).lng(),y:ring.getAt(0).lat()}),p.push(i)}W.push(p)}return l={type:"multipolygon",components:W}}if(e.constructor===google.maps.Data.GeometryCollection){var L=[];for(k=0;k<e.getLength();k+=1){var j=e.getAt(k);L.push(this.deconstruct.call(this,j))}return l={type:"geometrycollection",components:L}}if(t.isArray(e)){for(n=[],r=0;r<e.length;r+=1)n.push(this.deconstruct.call(this,e[r],!0));return l={type:function(){var t,o=e[0].constructor;for(t=0;t<e.length;t+=1)if(e[t].constructor!==o)return"geometrycollection";switch(o){case google.maps.Marker:return"multipoint";case google.maps.Polyline:return"multilinestring";case google.maps.Polygon:return"multipolygon";default:return"geometrycollection"}}(),components:function(){var t,e;for(e=[],t=0;t<n.length;t+=1)n[t].components&&e.push(n[t].components);return{comps:e}}()},l.components=l.components.comps,l}console.log("The passed object does not have any recognizable properties.")}}(Wkt||o(1))},function(e,o){e.exports=t},function(t,o){t.exports=e}])});